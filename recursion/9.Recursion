# Assignment Questions 9

<aside>
💡 **Question 1**

Given an integer `n`, return *`true` if it is a power of two. Otherwise, return `false`*.

An integer `n` is a power of two, if there exists an integer `x` such that `n == 2x`.

**Example 1:**
Input: n = 1 

Output: true

**Example 2:**
Input: n = 16 

Output: true

**Example 3:**
Input: n = 3 

Output: false

</aside>

//hint:


//verify theat number is negative also,it will also equal to zero then return false
function ispoweroftwo(n){
    if(n<=0){
        return false;
    }
//verify that if reminder is present surely it will respond to that value    
    while(n>1){
        if(n%2!==0){
            return false;
        }
//once it will true then we keep on dividing there  until we got the value one       
    n=Math.floor(n/2);
    }
    return n==1;
}

console.log(ispoweroftwo(3));



<aside>
💡 **Question 2**

Given a number n, find the sum of the first natural numbers.

**Example 1:**

Input: n = 3 

Output: 6

**Example 2:**

Input  : 5 

Output : 15

</aside>

//hint:sum of 'n' and the sum of the natural number(n-1)
function sumofnaturalnumbers(n){
if(n==1){
return 1;
}
else{ 
return n+sumofnaturalnumbers(n-1);
}
}
console.log(sumofnaturalnumbers(5));
console.log(sumofnaturalnumbers(3));
console.log(sumofnaturalnumbers(10000)); 


<aside>
💡 **Question 3**

****Given a positive integer, N. Find the factorial of N. 

**Example 1:**

Input: N = 5 

Output: 120

**Example 2:**

Input: N = 4

Output: 24

</aside>

//hint:we get the number then subtract by one then multiply bot the number
function factorial(n){
    if(n==0||n==1){
        return 1;
    }
//system:get the numebr then multiply by the subtract by one then multiply store that number    
    return n * factorial(n-1);
}
console.log(factorial(5));

<aside>
💡 **Question 4**

Given a number N and a power P, the task is to find the exponent of this number raised to the given power, i.e. N^P.

**Example 1 :** 

Input: N = 5, P = 2

Output: 25

**Example 2 :**
Input: N = 2, P = 5

Output: 32

</aside>

//hint:multiply the number and the N power (p-1)
function power(N,P){
if(P==0){
    return 1;
}
//system :multiply the N and the power of the N is the (P-1)
return N*power(N,P-1);
}


<aside>
💡 **Question 5**

Given an array of integers **arr**, the task is to find maximum element of that array using recursion.

**Example 1:**

Input: arr = {1, 4, 3, -5, -4, 8, 6};
Output: 8

**Example 2:**

Input: arr = {1, 4, 45, 6, 10, -8};
Output: 45

</aside>

function findMax(arr,index){
    if (index === arr.length-1) {//we are verify that there is no element is available then return the value
        return arr[index];
      }
    const n=arr[index];//get the current element from the array
    const maxsofar=Math.max(n,findMax(arr,index+1));
    return maxsofar;   

}
const array=[1,2,3,4,5];
const maxelement=findMax(array,0);
console.log("maximum element:",maxelement);

<aside>
💡 **Question 6**

Given first term (a), common difference (d) and a integer N of the Arithmetic Progression series, the task is to find Nth term of the series.

**Example 1:**

Input : a = 2 d = 1 N = 5
Output : 6
The 5th term of the series is : 6

**Example 2:**

Input : a = 5 d = 2 N = 10
Output : 23
The 10th term of the series is : 23

</aside>









<aside>
💡 **Question 7**

Given a string S, the task is to write a program to print all permutations of a given string.

**Example 1:**

***Input:***

*S = “ABC”*

***Output:***

*“ABC”, “ACB”, “BAC”, “BCA”, “CBA”, “CAB”*

**Example 2:**

***Input:***

*S = “XY”*

***Output:***

*“XY”, “YX”*

</aside>
function permutestring(str, prefix = "") {
    if (str.length === 0) {
      console.log(prefix);
    } else {
      for (let i = 0; i < str.length; i++) {
        const char = str[i];//get the current character from the string and store with the variable such as the char
        const newStr = str.slice(0, i) + str.slice(i + 1);//which index we are removing those index we should not take then remaining string we have to take
        const newPrefix = prefix + char;//concate with the after removing remaining char and the removed character 
        permutestring(newStr, newPrefix);
      }
    }
  }
  
  // Main function
  function printpermutations(str) {
    permutestring(str, "");
  }
  
  // driver code
  printpermutations("abcd");
  


<aside>
💡 **Question 8**

Given an array, find a product of all array elements.

**Example 1:**

Input  : arr[] = {1, 2, 3, 4, 5}
Output : 120
**Example 2:**

Input  : arr[] = {1, 6, 3}
Output : 18

function arrayProduct(arr, index = 0) {
    // retuen the actual element when it reaches the actual length of the array
    if (index === arr.length - 1) {
      return arr[index];
    }
    const currentElement = arr[index];
    const remainingProduct = arrayProduct(arr, index + 1);
    
    return currentElement * remainingProduct;
  }
  
  // Example u
  const array = [2, 3, 4, 5];
  const product = arrayProduct(array);
  console.log("Product:", product);
  







</aside>
